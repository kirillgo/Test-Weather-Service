<?xml version="1.0" encoding="UTF-8"?>
<definitions name="WeatherService"
targetNamespace="http://www.test.com/services/weather"
    xmlns="http://schemas.xmlsoap.org/wsdl/"
    xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:tns="http://www.test.com/services/weather"
    xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
    xmlns:plink="http://docs.oasis-open.org/wsbpel/2.0/plnktype">
    <wsdl:types>
        <xsd:schema targetNamespace="http://www.test.com/services/weather" xmlns:tns="http://www.test.com/services/weather"
            elementFormDefault="qualified">

            <xsd:complexType name="GetWeatherRequestParams">
                <xsd:sequence>
                    <xsd:element name="provider" type="tns:Provider" minOccurs="1" maxOccurs="1"/>
                    <xsd:element name="location" type="xsd:string" minOccurs="1" maxOccurs="1"/>
                    <xsd:element name="dates">
                        <xsd:complexType>
                            <xsd:sequence>
            					<xsd:element name="date" type="xsd:date" minOccurs="1" maxOccurs="unbounded"/>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:element name="getWeatherRequestParams" type="tns:GetWeatherRequestParams"/>

            <xsd:simpleType name="Provider">
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="Yandex"/>
                    <xsd:enumeration value="RP5"/>
                    <xsd:enumeration value="Gismeteo"/>
                </xsd:restriction>
            </xsd:simpleType>

			<xsd:complexType name="Weather">
				<xsd:sequence>
					<xsd:element name="location" type="xsd:string" minOccurs="1" maxOccurs="1"/>
					<xsd:element name="date" type="xsd:date" minOccurs="1" maxOccurs="1"/>
					<xsd:element name="weather" type="xsd:string" minOccurs="1" maxOccurs="1"/>
				</xsd:sequence>
			</xsd:complexType>

            <xsd:complexType name="GetWeatherResponseParams">
                <xsd:sequence>
                    <xsd:element name="weather" type="tns:Weather" minOccurs="1" maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:element name="getWeatherResponseParams" type="tns:GetWeatherResponseParams"/>

            <xsd:complexType name="ProviderNotAvailableFault">
                <xsd:sequence>
                    <xsd:element name="error" type="xsd:string" minOccurs="0" maxOccurs="1"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:element name="providerNotAvailableFault" type="tns:ProviderNotAvailableFault"/>

            <xsd:complexType name="UnknownLocationFault">
                <xsd:sequence>
                    <xsd:element name="location" type="xsd:string" minOccurs="1" maxOccurs="1"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:element name="unknownLocationFault" type="tns:UnknownLocationFault"/>

            <xsd:complexType name="ProviderInternalErrorFault">
                <xsd:sequence>
                    <xsd:element name="error" type="xsd:string" minOccurs="1" maxOccurs="1"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:element name="providerInternalErrorFault" type="tns:ProviderInternalErrorFault"/>

        </xsd:schema>
    </wsdl:types>
    <wsdl:message name="getWeatherRequest">
        <wsdl:part name="parameters" element="tns:getWeatherRequestParams"/>
    </wsdl:message>
    <wsdl:message name="getWeatherResponse">
        <wsdl:part name="parameters" element="tns:getWeatherResponseParams"/>
    </wsdl:message>
    <wsdl:message name="providerInternalErrorFault">
        <wsdl:part name="fault" element="tns:providerInternalErrorFault"/>
    </wsdl:message>
    <wsdl:message name="providerNotAvailableFault">
        <wsdl:part name="fault" element="tns:providerNotAvailableFault"/>
    </wsdl:message>
    <wsdl:message name="unknownLocationFault">
        <wsdl:part name="fault" element="tns:unknownLocationFault"/>
    </wsdl:message>
    <wsdl:portType name="WeatherServicePortType">
        <wsdl:operation name="getWeather">
    		<xsd:annotation>
                <wsdl:documentation>
                </wsdl:documentation>
    		</xsd:annotation>
            <wsdl:input name="getWeatherRequest" message="tns:getWeatherRequest"/>
            <wsdl:output name="getWeatherResponse" message="tns:getWeatherResponse"/>
            <wsdl:fault name="providerNotAvailable" message="tns:providerNotAvailableFault"/>
            <wsdl:fault name="providerInternalError" message="tns:providerInternalErrorFault"/>
            <wsdl:fault name="unknownLocation" message="tns:unknownLocationFault"/>
        </wsdl:operation>
    </wsdl:portType>
    <wsdl:binding name="WeatherServicePortBinding" type="tns:WeatherServicePortType">
        <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
        <wsdl:operation name="getWeather">
            <soap:operation/>
            <wsdl:input name="getWeatherRequest">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="getWeatherResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="providerNotAvailable">
                <soap:fault use="literal" name="providerNotAvailable"/>
            </wsdl:fault>
            <wsdl:fault name="providerInternalError">
                <soap:fault use="literal" name="providerInternalError"/>
            </wsdl:fault>
            <wsdl:fault name="unknownLocation">
                <soap:fault use="literal" name="unknownLocation"/>
            </wsdl:fault>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:service name="WeatherService">
        <wsdl:port name="WeatherServicePort" binding="tns:WeatherServicePortBinding">
            <soap:address location="http://localhost:${HttpDefaultPort}/WeatherService/WeatherServicePort"/>
        </wsdl:port>
    </wsdl:service>
    <plink:partnerLinkType name="WeatherServiceLinkType">
        <plink:role name="WeatherServiceRole" portType="tns:WeatherServicePortType"/>
    </plink:partnerLinkType>
</definitions>
