<?xml version="1.0" encoding="UTF-8"?>
<definitions name="WeatherService" targetNamespace="http://www.test.com/services/weather" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://www.test.com/services/weather" xmlns:plink="http://docs.oasis-open.org/wsbpel/2.0/plnktype" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <types>
    <xsd:schema elementFormDefault="qualified" targetNamespace="http://www.test.com/services/weather" xmlns:tns="http://www.test.com/services/weather">

            <xsd:complexType name="GetWeatherRequestParams">
                <xsd:sequence>
                    <xsd:element name="provider" type="tns:Provider"/>
                    <xsd:element name="location" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:element name="getWeatherRequestParams" type="tns:GetWeatherRequestParams"/>

            <xsd:simpleType name="Provider">
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="Yandex"/>
                    <xsd:enumeration value="RP5"/>
                    <xsd:enumeration value="Gismeteo"/>
                </xsd:restriction>
            </xsd:simpleType>

            <xsd:complexType name="GetWeatherResponseParams">
                <xsd:sequence>
                    <xsd:element name="weather" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:element name="getWeatherResponseParams" type="tns:GetWeatherResponseParams"/>

            <xsd:complexType name="ProviderNotAvailableFault">
                <xsd:sequence>
                    <xsd:element minOccurs="0" name="error" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:element name="providerNotAvailableFault" type="tns:ProviderNotAvailableFault"/>

            <xsd:complexType name="UnknownLocationFault">
                <xsd:sequence>
                    <xsd:element name="location" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:element name="unknownLocationFault" type="tns:UnknownLocationFault"/>

            <xsd:complexType name="ProviderInternalErrorFault">
                <xsd:sequence>
                    <xsd:element name="error" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:element name="providerInternalErrorFault" type="tns:ProviderInternalErrorFault"/>

        </xsd:schema>
  </types>
  <message name="providerInternalErrorFault">
    <part name="fault" element="tns:providerInternalErrorFault">
    </part>
  </message>
  <message name="unknownLocationFault">
    <part name="fault" element="tns:unknownLocationFault">
    </part>
  </message>
  <message name="getWeatherRequest">
    <part name="parameters" element="tns:getWeatherRequestParams">
    </part>
  </message>
  <message name="providerNotAvailableFault">
    <part name="fault" element="tns:providerNotAvailableFault">
    </part>
  </message>
  <message name="getWeatherResponse">
    <part name="parameters" element="tns:getWeatherResponseParams">
    </part>
  </message>
  <portType name="WeatherServicePortType">
    <operation name="getWeather">
      <input name="getWeatherRequest" message="tns:getWeatherRequest">
    </input>
      <output name="getWeatherResponse" message="tns:getWeatherResponse">
    </output>
      <fault name="providerInternalError" message="tns:providerInternalErrorFault">
    </fault>
      <fault name="unknownLocation" message="tns:unknownLocationFault">
    </fault>
      <fault name="providerNotAvailable" message="tns:providerNotAvailableFault">
    </fault>
    <xsd:annotation>
                <wsdl:documentation>
                    Add melody to subscriber settings.
                    If need activation RBT service, then it is activated automaticaly.
                </wsdl:documentation>
    		</xsd:annotation>
    </operation>
  </portType>
  <binding name="WeatherServicePortBinding" type="tns:WeatherServicePortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="getWeather">
      <soap:operation/>
      <input name="getWeatherRequest">
        <soap:body use="literal"/>
      </input>
      <output name="getWeatherResponse">
        <soap:body use="literal"/>
      </output>
      <fault name="providerInternalError">
        <soap:fault name="providerInternalError" use="literal"/>
      </fault>
      <fault name="unknownLocation">
        <soap:fault name="unknownLocation" use="literal"/>
      </fault>
      <fault name="providerNotAvailable">
        <soap:fault name="providerNotAvailable" use="literal"/>
      </fault>
    </operation>
  </binding>
  <service name="WeatherService">
    <port name="WeatherServicePort" binding="tns:WeatherServicePortBinding">
      <soap:address location="http://localhost:${HttpDefaultPort}/WeatherService/WeatherServicePort"/>
    </port>
  </service>
    <plink:partnerLinkType name="WeatherServiceLinkType">
        <plink:role name="WeatherServiceRole" portType="tns:WeatherServicePortType"/>
    </plink:partnerLinkType>
</definitions>
